#!/bin/sh

#justInCase=$(awk 'BEGIN { srand(); print int(rand()*32768) }' /dev/null | md5sum | head -c 32).html
noOperation(){
 	echo "Usage: $0 [operations] [options] [input_file]"
	echo "Type \"$0 --help\" for more"
}

help(){
	echo "I'll do the documentaion later lol"
}

if [ $# -eq 0 ] ; then noOperation "$@"
elif [ "$(echo "$*" | sed "s/ /\\n/g" | grep \\--help)" = "--help" ] ; then help "$@" ; exit
else
	#Checking for adequate dependencies
	if ! command -v gpg > /dev/null 2>&1 ; then echo "gnupg is not installed"; exit 127; fi
	
	#A workaround if the script failed to take care of the clipboard
	#Good Alternative if you don't wanna use the -s option
	makeJavaScript() {
		deleteJavaScriptTime=60
		doubleQuoteFriendly=$(sed 's/\\/\\\\/g;s/\"/\\"/g' "$tmpFile")
		javaScriptPath=$(mktemp -u).html
		fileNameOnly=${javaScriptPath##*/}
		OS=$(uname -o)
		if [ "$OS" = "Android" ] && [ -w "/storage/emulated/0" ] ; then
			javaScriptPath="/storage/emulated/0/${fileNameOnly#/tmp/}"
		elif [ "$OS" = "Android" ] ; then
			javaScriptPath=
			echo "You don't have write permissions in Termux" && [ -z "$showTextOption" ] && cleanUp "$@" && exit 1
		fi
		[ -n "$javaScriptPath" ] && {
                echo "<html>"
                echo "<head><title> Copy to system clipboard </title></head>"
                echo "<script>"
                echo "function copyToClipboard() { navigator.clipboard.writeText(\"$doubleQuoteFriendly\"); }"
                echo "</script>"
                echo "<body>"
                echo "<p> Click <button onclick=copyToClipboard()> Copy </button> to put decrypted text to Clipboard </p>"
                echo "</body>"
                echo "</html>"
		} > "$javaScriptPath"
		[ -n "$javaScriptPath" ] && {
		[ ! "$OS" = "Android" ] && command -v xdg-open > /dev/null 2>&1 && xdg-open "$javaScriptPath" > /dev/null 2>&1
		[ -d "/c/Windows" ] && start "$javaScriptPath"
		echo "Your decrypted file is in file://$javaScriptPath"
		echo "This file will be deleted in $deleteJavaScriptTime seconds"
		sleep $deleteJavaScriptTime && rm "$javaScriptPath" &
		}
	}

	cleanUp(){
		rm "$tmpFile"
	}

	showText(){
		echo && head -n 1 "$tmpFile" && echo && echo
	}

	clearClipboard(){
		clearTime=15
		[ "$success" -eq 0 ] && [ -n "$clipboard" ] && \
		echo "Clearing the clipboard in $clearTime seconds" && \
		sleep $clearTime && $clipboard < /dev/null &
	}

	copyToClipboard(){
		timeout 3 head -n 1 "$tmpFile" | $clipboard && echo "Copied to Clipboard sucessfully" && \
		[ -n "$clearClipOption" ] && $clearClipOption
	}

	decryption(){
		tmpFile=$(mktemp -u)
		for lastArg in "$@"; do :; done
		if [ ! -f "$lastArg" ]; then echo "There is no input file"; exit 1; fi
		gpg --no-symkey-cache --output "$tmpFile" "$lastArg" ; success=$?

		# Clipboards by OS'
		[ -n "$WAYLAND_DISPLAY" ] && command -v wl-copy > /dev/null 2>&1 && clipboard="wl-copy" || \
		command -v xclip > /dev/null 2>&1 && clipboard="xclip -selection clipboard"
		termuxClip="termux-clipboard-set"
		command -v termux-clipboard-set > /dev/null 2>&1 && clipboard="$termuxClip"
		command -v pbcopy > /dev/null 2>&1 && clipboard="pbcopy"
		[ -d "/c/Windows" ] && command -v clip.exe > /dev/null 2>&1 && clipboard="clip.exe"
		
		[ $success -eq 0 ] && [ -z "$javaScriptOption" ] && [ -n "$clipboard" ] && copyToClipboard "$@" 
		[ $? -eq 124 ] && [ "$clipboard" = "$termuxClip"  ] && \
		{ echo "Termux API is not installed"
		echo "Install it on F-droid or Google Play Store to use the system clipboard feature"
		[ -z "$showTextOption" ] && exit 1 ; } && \
		echo "There is something wrong with the system clipboard" && { [ -z "$showTextOption" ] && [ -z "$javaScriptOption" ] ; } && \
		cleanUp "$@" && exit 1

		# If the script doesn't detect any clipboard programs
		[ "$success" -eq 0 ] && [ -z "$clipboard" ] && echo "Could not find any clipboards" && \
		[ -z "$showTextOption" ] && [ -z "$javaScriptOption" ] && cleanUp "$@" && exit 127

		[ $success -eq 0 ] && [ -n "$javaScriptOption" ] && $javaScriptOption
		[ $success -eq 0 ] && [ -n "$showTextOption" ] && $showTextOption
	}
	numOfOperations=0
	OPTIND=1
	while getopts ":hEDcsj" OPTION; do
		case $OPTION in
			h) help "$@" ; exit ;;
			D) numOfOperations=$((numOfOperations+1)) ; operation=decrypt ;;
			E) numOfOperations=$((numOfOperations+1)) ; operation=encrypt ;;
			c) clearClipOption='clearClipboard "$@"' ;;
			s) showTextOption='showText "$@"' ;;
			j) javaScriptOption='makeJavaScript "$@"' ;;
			*) echo "-$OPTARG is a unknown option" && exit 1 ;;
		esac
	done

	[ $numOfOperations -gt 1 ] && echo "-E and -D options shouldn't be used together " && exit 1

	case "$operation" in
		decrypt) decryption "$@" ;;
		encrypt) echo "Work in Progress" ;;
		*) echo "No operation was specified" ; noOperation "$@" ;;
	esac
	
	[ -n "$success" ] && [ $success -eq 0 ] && cleanUp "$@"
fi	
